{"version":3,"file":"ngx-bootstrap-navbar.js","sources":["ng:/ngx-bootstrap-navbar/lib/navbar-dynamic-collapse.directive.ts","ng:/ngx-bootstrap-navbar/lib/navbar-animation.ts","ng:/ngx-bootstrap-navbar/lib/navbar-collapse.component.ts","ng:/ngx-bootstrap-navbar/lib/navbar.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, takeUntil, filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[ngxNavbarDynamicExpand]',\r\n  host: {\r\n    class: 'navbar text-nowrap',\r\n    '[class.navbar-expand]': 'isExpanded',\r\n  },\r\n})\r\nexport class NgxNavbarDynamicExpandDirective\r\n  implements AfterContentInit, OnDestroy {\r\n  private _isExpanded = false;\r\n  get isExpanded() {\r\n    return this._isExpanded;\r\n  }\r\n\r\n  private _onDestroy = new Subject<void>();\r\n  private _update = new Subject<void>();\r\n\r\n  private isExpanded$ = merge(\r\n    this._viewportRuler.change(150),\r\n    this._update\r\n  ).pipe(\r\n    filter(() => checkBootstrapStylesAreLoaded(this._elRef.nativeElement)),\r\n    map(() => {\r\n      const element = this._elRef.nativeElement;\r\n      let overflowSize;\r\n      if (this.isExpanded) {\r\n        overflowSize = element.scrollWidth - element.offsetWidth;\r\n      } else {\r\n        const clone = element.cloneNode(true) as HTMLElement;\r\n        clone.classList.add('navbar-expand');\r\n        element.parentElement.appendChild(clone);\r\n        overflowSize = clone.scrollWidth - clone.offsetWidth;\r\n        element.parentElement.removeChild(clone);\r\n      }\r\n      if (!overflowSize) {\r\n        return true;\r\n      }\r\n    }),\r\n    distinctUntilChanged(),\r\n    takeUntil(this._onDestroy)\r\n  );\r\n\r\n  constructor(\r\n    private _viewportRuler: ViewportRuler,\r\n    private _elRef: ElementRef<HTMLElement>,\r\n    private _ngZone: NgZone,\r\n    private _cdRef: ChangeDetectorRef\r\n  ) {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this.isExpanded$.subscribe((isExpanded) => {\r\n        this._ngZone.run(() => {\r\n          this._isExpanded = isExpanded;\r\n          this._cdRef.markForCheck();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      if (checkBootstrapStylesAreLoaded(this._elRef.nativeElement)) {\r\n        setTimeout(() => {\r\n          this.updateExpansion();\r\n        }, 0);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.ngAfterContentInit();\r\n        }, 1000 / 60);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._update.complete();\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  updateExpansion() {\r\n    this._update.next();\r\n  }\r\n}\r\n\r\nfunction checkBootstrapStylesAreLoaded(element: Element): boolean {\r\n  const computedStyle = getComputedStyle(element);\r\n  return computedStyle && computedStyle.whiteSpace === 'nowrap';\r\n}\r\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\r\n/** Time and timing curve for navbar animations. */\r\nexport const NAVBAR_ANIMATION_TIMING = '300ms ease-out';\r\n\r\nexport const ngxNavbarAnimations: {\r\n  readonly navbarSlide: AnimationTriggerMetadata;\r\n} = {\r\n  navbarSlide: trigger('slideState', [\r\n    transition('false => true', [\r\n      style({\r\n        opacity: 0,\r\n        height: 0,\r\n        overflow: 'hidden'\r\n      }),\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          opacity: 1,\r\n          height: '*'\r\n        })\r\n      )\r\n    ]),\r\n    transition('true => false', [\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          display: 'block',\r\n          opacity: 0,\r\n          height: 0,\r\n          overflow: 'hidden'\r\n        })\r\n      )\r\n    ])\r\n  ])\r\n};\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ngxNavbarAnimations } from './navbar-animation';\r\n\r\n@Component({\r\n  selector: 'ngx-navbar-collapse',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  styles: [\r\n    `\r\n      .ngx-navbar-collapse.collapsing {\r\n        height: auto;\r\n      }\r\n    `\r\n  ],\r\n  host: {\r\n    class: 'navbar-collapse ngx-navbar-collapse',\r\n    '[class.collapse]': '!isTransitioning',\r\n    '[class.show]': '!isCollapsed && !isTransitioning',\r\n    '[class.collapsing]': 'isTransitioning',\r\n    '[@slideState]': '!isCollapsed',\r\n    '(@slideState.done)': 'isTransitioning = false'\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ngxNavbarAnimations.navbarSlide],\r\n  exportAs: 'ngxNavbarCollapse'\r\n})\r\nexport class NgxNavbarCollapseComponent {\r\n  public isCollapsed = true;\r\n  public isTransitioning = false;\r\n\r\n  constructor(private _cdr: ChangeDetectorRef) {}\r\n\r\n  toggle() {\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this._cdr.markForCheck();\r\n  }\r\n\r\n  close() {\r\n    if (this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = true;\r\n    this._cdr.markForCheck();\r\n  }\r\n\r\n  open() {\r\n    if (!this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = false;\r\n    this._cdr.markForCheck();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxNavbarCollapseComponent } from './navbar-collapse.component';\r\nimport { NgxNavbarDynamicExpandDirective } from './navbar-dynamic-collapse.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective],\r\n  imports: [CommonModule],\r\n  exports: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective]\r\n})\r\nexport class NgxNavbarModule {}\r\n"]}