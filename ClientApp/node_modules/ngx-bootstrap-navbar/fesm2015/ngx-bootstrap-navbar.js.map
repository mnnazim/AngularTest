{"version":3,"file":"ngx-bootstrap-navbar.js","sources":["ng://ngx-bootstrap-navbar/lib/navbar-dynamic-collapse.directive.ts","ng://ngx-bootstrap-navbar/lib/navbar-animation.ts","ng://ngx-bootstrap-navbar/lib/navbar-collapse.component.ts","ng://ngx-bootstrap-navbar/lib/navbar.module.ts"],"sourcesContent":["import { ViewportRuler } from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { merge, Subject } from 'rxjs';\r\nimport { distinctUntilChanged, map, takeUntil, filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[ngxNavbarDynamicExpand]',\r\n  host: {\r\n    class: 'navbar text-nowrap',\r\n    '[class.navbar-expand]': 'isExpanded',\r\n  },\r\n})\r\nexport class NgxNavbarDynamicExpandDirective\r\n  implements AfterContentInit, OnDestroy {\r\n  private _isExpanded = false;\r\n  get isExpanded() {\r\n    return this._isExpanded;\r\n  }\r\n\r\n  private _onDestroy = new Subject<void>();\r\n  private _update = new Subject<void>();\r\n\r\n  private isExpanded$ = merge(\r\n    this._viewportRuler.change(150),\r\n    this._update\r\n  ).pipe(\r\n    filter(() => checkBootstrapStylesAreLoaded(this._elRef.nativeElement)),\r\n    map(() => {\r\n      const element = this._elRef.nativeElement;\r\n      let overflowSize;\r\n      if (this.isExpanded) {\r\n        overflowSize = element.scrollWidth - element.offsetWidth;\r\n      } else {\r\n        const clone = element.cloneNode(true) as HTMLElement;\r\n        clone.classList.add('navbar-expand');\r\n        element.parentElement.appendChild(clone);\r\n        overflowSize = clone.scrollWidth - clone.offsetWidth;\r\n        element.parentElement.removeChild(clone);\r\n      }\r\n      if (!overflowSize) {\r\n        return true;\r\n      }\r\n    }),\r\n    distinctUntilChanged(),\r\n    takeUntil(this._onDestroy)\r\n  );\r\n\r\n  constructor(\r\n    private _viewportRuler: ViewportRuler,\r\n    private _elRef: ElementRef<HTMLElement>,\r\n    private _ngZone: NgZone,\r\n    private _cdRef: ChangeDetectorRef\r\n  ) {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this.isExpanded$.subscribe((isExpanded) => {\r\n        this._ngZone.run(() => {\r\n          this._isExpanded = isExpanded;\r\n          this._cdRef.markForCheck();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      if (checkBootstrapStylesAreLoaded(this._elRef.nativeElement)) {\r\n        setTimeout(() => {\r\n          this.updateExpansion();\r\n        }, 0);\r\n      } else {\r\n        setTimeout(() => {\r\n          this.ngAfterContentInit();\r\n        }, 1000 / 60);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._update.complete();\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  updateExpansion() {\r\n    this._update.next();\r\n  }\r\n}\r\n\r\nfunction checkBootstrapStylesAreLoaded(element: Element): boolean {\r\n  const computedStyle = getComputedStyle(element);\r\n  return computedStyle && computedStyle.whiteSpace === 'nowrap';\r\n}\r\n","import { animate, AnimationTriggerMetadata, style, transition, trigger } from '@angular/animations';\r\n/** Time and timing curve for navbar animations. */\r\nexport const NAVBAR_ANIMATION_TIMING = '300ms ease-out';\r\n\r\nexport const ngxNavbarAnimations: {\r\n  readonly navbarSlide: AnimationTriggerMetadata;\r\n} = {\r\n  navbarSlide: trigger('slideState', [\r\n    transition('false => true', [\r\n      style({\r\n        opacity: 0,\r\n        height: 0,\r\n        overflow: 'hidden'\r\n      }),\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          opacity: 1,\r\n          height: '*'\r\n        })\r\n      )\r\n    ]),\r\n    transition('true => false', [\r\n      animate(\r\n        NAVBAR_ANIMATION_TIMING,\r\n        style({\r\n          display: 'block',\r\n          opacity: 0,\r\n          height: 0,\r\n          overflow: 'hidden'\r\n        })\r\n      )\r\n    ])\r\n  ])\r\n};\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ngxNavbarAnimations } from './navbar-animation';\r\n\r\n@Component({\r\n  selector: 'ngx-navbar-collapse',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  styles: [\r\n    `\r\n      .ngx-navbar-collapse.collapsing {\r\n        height: auto;\r\n      }\r\n    `\r\n  ],\r\n  host: {\r\n    class: 'navbar-collapse ngx-navbar-collapse',\r\n    '[class.collapse]': '!isTransitioning',\r\n    '[class.show]': '!isCollapsed && !isTransitioning',\r\n    '[class.collapsing]': 'isTransitioning',\r\n    '[@slideState]': '!isCollapsed',\r\n    '(@slideState.done)': 'isTransitioning = false'\r\n  },\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [ngxNavbarAnimations.navbarSlide],\r\n  exportAs: 'ngxNavbarCollapse'\r\n})\r\nexport class NgxNavbarCollapseComponent {\r\n  public isCollapsed = true;\r\n  public isTransitioning = false;\r\n\r\n  constructor(private _cdr: ChangeDetectorRef) {}\r\n\r\n  toggle() {\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = !this.isCollapsed;\r\n    this._cdr.markForCheck();\r\n  }\r\n\r\n  close() {\r\n    if (this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = true;\r\n    this._cdr.markForCheck();\r\n  }\r\n\r\n  open() {\r\n    if (!this.isCollapsed) {\r\n      return;\r\n    }\r\n    this.isTransitioning = true;\r\n    this.isCollapsed = false;\r\n    this._cdr.markForCheck();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxNavbarCollapseComponent } from './navbar-collapse.component';\r\nimport { NgxNavbarDynamicExpandDirective } from './navbar-dynamic-collapse.directive';\r\n\r\n@NgModule({\r\n  declarations: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective],\r\n  imports: [CommonModule],\r\n  exports: [NgxNavbarCollapseComponent, NgxNavbarDynamicExpandDirective]\r\n})\r\nexport class NgxNavbarModule {}\r\n"],"names":[],"mappings":"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"}